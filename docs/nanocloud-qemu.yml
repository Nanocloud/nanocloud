---
swagger: '2.0'
info:
  version: "2.1.0"
  title: Nanocloud libvirt module API
  description: |
    **Complete Nanocloud libvirt module API documentation.**

    You can try all HTTP operation described in this Swagger spec.
consumes:
  - application/json
produces:
  - application/json
paths:
  /machines:
    post:
      summary:
        Create a new machine
      parameters:
        - in: body
          name: data
          description: Machine description
          required: true
          schema:
              $ref: "#/definitions/Machine"
      responses:
        201:
          description: A VM is booting
        400:
          description: Machine description is missing or incomplete
          
  /machines/status/{machine_uuid}:
    get:
      summary:
        Get the status of the specified machine
      parameters:
        - in: path
          name: machine_uuid
          description: Machine's UUID
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: VM status
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/MachineStatus"
          
  /machines/start/{machine_uuid}:
    post:
      summary:
        Get the status of the specified machine
      parameters:
        - in: path
          name: machine_uuid
          description: Machine's UUID
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: VM has been started
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/MachineStatus"
          
  /machines/stop/{machine_uuid}:
    post:
      summary:
        Get the status of the specified machine
      parameters:
        - in: path
          name: machine_uuid
          description: Machine's UUID
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: VM has been stopped
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/MachineStatus"

  /machines/{machine_uuid}:
    delete:
      summary:
        Stop specified VM. This won't delete it
      parameters:
        - in: path
          name: machine_uuid
          description: Machine's UUID
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: VM has been deleted
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/MachineStatus"
        404:
          description: No machine found with this UUID
  /images:
    post:
      summary:
        Create a new image
      parameters:
        - in: body
          name: body
          description: Machine id and image name
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        201:
          description: A new image, based on the machine, is created
        400:
          description: Machine id or image name is missing or incomplete

definitions:
  Machine:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      status:
        type: string
      vncPort:
        type: number
      rdpPort:
        type: number
      plazaPort:
        type: number
  MachineStatus:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
  Image:
    type: object
    properties:
      iaasId:
        type: string
      buildFrom:
        type: string
